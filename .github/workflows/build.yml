name: Deploy hsm-planb.de website

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      ca_pub_fingerprint:
        description: fingerprint of CA signed user cert
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: |
          docker build -t danackerson/hsm-planb.de:vg$GITHUB_RUN_ID .
          docker login -u ${{ secrets.CTX_DOCKER_USER }} -p ${{ secrets.CTX_DOCKER_PASS }}
          docker tag danackerson/hsm-planb.de:vg$GITHUB_RUN_ID danackerson/hsm-planb.de:latest
          docker push --all-tags danackerson/hsm-planb.de

      - name: Deploy to DO
        run: |
          git clone https://github.com/ackersonde/digitaloceans.git
          cd digitaloceans
          go get -t -d -v ./...
          go build do.go
          cd ../

          public_ip_address=$(curl -s https://checkip.amazonaws.com)
          ./digitaloceans/do -fn=firewallSSH -allow=true -ip=$public_ip_address -tag=traefik

          mkdir ~/.ssh
          cat <<EOF >~/.ssh/id_rsa
          ${{ secrets.CTX_DIGITALOCEAN_SSH_PRIVKEY }}
          EOF
          chmod 400 ~/.ssh/id_rsa

          ssh -o StrictHostKeyChecking=no root@ackerson.de "\
            docker rm -f homepage || true && \
            docker run -d --restart=always \
              -e GITHUB_RUN_ID=$GITHUB_RUN_ID \
              --label='traefik.enable=true' \
              --label='traefik.http.routers.homepage.middlewares=http-ratelimit@file,secHeaders@file' \
              --label='traefik.http.routers.homepage.tls.certResolver=letsencrypt' \
              --label='traefik.http.routers.homepage.tls.domains=hausmeisterservice-planb.de' \
              --label='traefik.http.routers.homepage.rule=Host(\`hausmeisterservice-planb.de\`) || Host(\`www.hausmeisterservice-planb.de\`)' \
              --name hsm-planb danackerson/hsm-planb.de:vg$GITHUB_RUN_ID"

          rm -Rf ~/.ssh ~/.docker/config.json
          ./digitaloceans/do -fn=firewallSSH -allow=false -ip=$public_ip_address

          curl -s -o /dev/null -X POST -d token=${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }} -d channel=C092UE0H4 \
            -d text="<https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID | $GITHUB_REPOSITORY @ $GITHUB_RUN_ID>" \
            https://slack.com/api/chat.postMessage
